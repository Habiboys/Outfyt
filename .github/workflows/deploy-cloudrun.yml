name: Deploy to Cloud Run

on:
  push:
    paths:
      - 'Cloud-Computing/backend-api/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Google Auth
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCLOUD_SERVICE_KEY }}'



    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Authenticate Docker with GCP
      run: gcloud auth configure-docker

    - name: Build and Push Docker Image
      run: |
        IMAGE_NAME="gcr.io/${{ secrets.GCLOUD_PROJECT_ID}}/cc-service"
        cd Cloud-Computing/backend-api
        docker build -t $IMAGE_NAME .
        docker push $IMAGE_NAME

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy cc-service \
          --image=gcr.io/${{ secrets.GCLOUD_PROJECT_ID}}/cc-service \
          --region=${{ secrets.GCLOUD_REGION }} \
          --platform=managed \
          --allow-unauthenticated \
          -set-env-vars GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }},GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }},REDIRECT_URI=${{ secrets.REDIRECT_URI }},GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }},BUCKET_NAME=${{ secrets.BUCKET_NAME }},DB_USERNAME=${{ secrets.DB_USERNAME }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},DB_DATABASE=${{ secrets.DB_DATABASE }},DB_HOST=${{ secrets.DB_HOST }},DB_DIALECT=${{ secrets.DB_DIALECT }},BUCKET_KEY=${{ secrets.BUCKET_KEY }}